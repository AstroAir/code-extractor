[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pysearch"
version = "0.1.0"
description = "High-performance, context-aware search engine for Python codebases supporting text/regex/AST/semantic search with CLI and API interfaces"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
  { name = "Kilo Code", email = "contact@kilocode.dev" }
]
maintainers = [
  { name = "Kilo Code", email = "contact@kilocode.dev" }
]
keywords = [
  "search", "python", "code", "ast", "regex", "semantic", "cli", "api",
  "codebase", "analysis", "refactoring", "indexing", "pattern-matching",
  "developer-tools", "code-quality", "static-analysis"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Text Processing :: Indexing",
  "Topic :: Text Processing :: Linguistic",
  "Topic :: Utilities",
  "Typing :: Typed"
]
dependencies = [
  "rich>=13.7.1",
  "orjson>=3.10.7",
  "regex>=2024.5.15",
  "pathspec>=0.12.1",
  "click>=8.1.7",
  "pydantic>=2.7.0",
  "fastmcp>=2.11.0",
  "fuzzywuzzy>=0.18.0",
  "python-levenshtein>=0.21.0",
  "rapidfuzz>=3.0.0"
]

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-cov",
  "coverage[toml]",
  "hypothesis",
  "mypy",
  "ruff",
  "black",
  "pygments",
  "pytest-benchmark",
  "pytest-asyncio",
  "types-regex",
  "mkdocs-material",
  "mkdocstrings[python]",
  "mkdocs-autorefs",
  "mkdocs-git-revision-date-localized-plugin",
  "mkdocs-git-committers-plugin-2",
  "mkdocs-minify-plugin"
]
watch = [
  "watchdog>=4.0.0"
]

[project.urls]
Homepage = "https://github.com/your-org/pysearch"
Documentation = "https://pysearch.readthedocs.io/"
Repository = "https://github.com/your-org/pysearch.git"
Changelog = "https://github.com/your-org/pysearch/blob/main/CHANGELOG.md"
Issues = "https://github.com/your-org/pysearch/issues"
"Bug Reports" = "https://github.com/your-org/pysearch/issues"
"Feature Requests" = "https://github.com/your-org/pysearch/issues/new?template=feature_request.md"
"Source Code" = "https://github.com/your-org/pysearch"
"Download" = "https://pypi.org/project/pysearch/"

[project.scripts]
pysearch = "pysearch.cli:main"

[project.entry-points."pysearch.plugins"]
# Future plugin system entry points can be defined here

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["pysearch"]
package-data = { pysearch = ["py.typed"] }

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=pysearch --cov-config=pyproject.toml --cov-report=term-missing:skip-covered --cov-report=xml:coverage.xml"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
parallel = true
source = ["src/pysearch"]
data_file = ".coverage/coverage"

[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 2
fail_under = 85

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.mypy]
python_version = "3.10"
strict = false
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
pretty = true
files = [
  "src/pysearch/utils.py",
  "mcp/servers/",
  "mcp/shared/",
]
exclude = [
  "build",
  "dist",
  "sdist",
  "tests/.*_data",
  "tests/.*",
  "examples/.*",
]

[[tool.mypy.overrides]]
module = [
  "regex.*",
  "watchdog.*",
  "rapidfuzz.*",
  "fastmcp.*",
]
ignore_missing_imports = true

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
ignore = ["E203", "E266", "E501"]

[tool.ruff.format]
line-ending = "lf"

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["pysearch"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.bandit]
skips = ["B101"]
