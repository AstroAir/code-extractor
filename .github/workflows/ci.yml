name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[dev]"

      - name: Lint (ruff)
        run: python -m ruff check .

      - name: Format check (black)
        run: python -m black --check .

      - name: Type check (mypy)
        run: python -m mypy src tests

      - name: Run tests with coverage
        run: |
          python -m pytest

      - name: Validate project structure
        run: make check-structure

      - name: Test MCP servers
        run: make mcp-servers
      - name: Upload coverage to artifact
        if: ${{ matrix.python-version == '3.12' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  coverage-gate:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v5
        with:
          name: coverage-xml
          path: .
      - name: Enforce minimum coverage
        shell: bash
        run: |
          echo "Enforcing coverage >= 85%"
          python - << 'PY'
          import re, sys
          xml = open("coverage.xml", "r", encoding="utf-8").read()
          m = re.search(r'line-rate="([0-9.]+)"', xml)
          if not m:
              print("coverage.xml missing line-rate")
              sys.exit(1)
          rate = float(m.group(1)) * 100
          print(f"Line coverage: {rate:.2f}%")
          sys.exit(0 if rate >= 85 else 2)
          PY